body {
  margin: 0;
  background: /*radial-gradient(
      circle at 20% 80%,
      rgba(120, 119, 198, 0.3) 0%,
      transparent 50%
    ),
    radial-gradient(
      circle at 80% 20%,
      rgba(255, 119, 198, 0.3) 0%,
      transparent 50%
    ),
    radial-gradient(
      circle at 40% 40%,
      rgba(120, 219, 255, 0.2) 0%,
      transparent 50%
    ),*/ linear-gradient(
    135deg,
    #0a0a0a 0%,
    #1a0a1a 50%,
    #0a1a1a 100%
  );
  font-family: "Press Start 2P", "Courier New", "Monaco", "Menlo", "Consolas",
    monospace;
  color: #0ff;
  text-align: center;
  overflow: hidden;
  min-height: 100vh;
}

/* Animated grid background */
body::before {
  content: "";
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: linear-gradient(0deg, rgba(0, 255, 255, 0.09) 1px, transparent 1px),       /* horizontal (cyan) */
  linear-gradient(90deg, rgba(255, 0, 255, 0.09) 1px, transparent 1px), 
    linear-gradient(90deg, rgba(0, 255, 255, 0.09) 1px, transparent 1px);
  background-size: 40px 40px;
  animation: grid-move 10s linear infinite;
  pointer-events: none;
  z-index: -2;
}

/* Scanlines effect */
body::after {
  content: "";
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    transparent 50%,
    rgba(0, 255, 255, 0.02) 50%,
    rgba(0, 255, 255, 0.02) 51%,
    transparent 51%
  );
  background-size: 100% 4px;
  animation: scanlines 0.1s linear infinite;
  pointer-events: none;
  z-index: -1;
}

@keyframes grid-move {
  0% {
    transform: translate(0, 0);
  }
  100% {
    transform: translate(70px,70px);
  }
}

@keyframes scanlines {
  0% {
    transform: translateY(0);
  }
  100% {
    transform: translateY(4px);
  }
}

.tetris-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 100vh;
  overflow: hidden;
  --block-size: min(4vw, 30px);
  --gap-size: max(1px, 0.2vw);
  --board-padding: max(5px, 1vw);
  position: relative;
  padding: 10px;
}

/* Floating geometric shapes - dimmed */
.tetris-container::before {
  content: "";
  position: absolute;
  width: 100%;
  height: 100%;
  background-image: radial-gradient(
      circle at 10% 20%,
      rgba(0, 255, 255, 0.06) 2px,
      transparent 2px
    ),
    radial-gradient(
      circle at 90% 80%,
      rgba(255, 0, 255, 0.06) 1px,
      transparent 1px
    ),
    radial-gradient(
      circle at 30% 70%,
      rgba(255, 255, 0, 0.06) 1.5px,
      transparent 1.5px
    ),
    radial-gradient(
      circle at 70% 30%,
      rgba(0, 255, 255, 0.06) 1px,
      transparent 1px
    );
  background-size: 200px 200px, 150px 150px, 300px 300px, 250px 250px;
  animation: float-shapes 15s ease-in-out infinite;
  pointer-events: none;
  z-index: -1;
}

@keyframes float-shapes {
  0%,
  100% {
    transform: translate(0, 0) rotate(0deg);
  }
  25% {
    transform: translate(20px, -20px) rotate(90deg);
  }
  50% {
    transform: translate(-10px, 10px) rotate(180deg);
  }
  75% {
    transform: translate(-20px, -10px) rotate(270deg);
  }
}

/* Retro particles - dimmed */
.tetris-container::after {
  content: "";
  position: absolute;
  width: 2px;
  height: 2px;
  background: rgba(0, 255, 255, 0.6);
  border-radius: 50%;
  box-shadow: 25px 18px 0 0 rgba(0, 255, 255, 0.6),
    50px 35px 0 0 rgba(255, 0, 255, 0.6), 75px 10px 0 0 rgba(255, 255, 0, 0.6),
    100px 25px 0 0 rgba(0, 255, 255, 0.6), 125px 40px 0 0 rgba(255, 0, 255, 0.6),
    150px 15px 0 0 rgba(255, 255, 0, 0.6), 200px 30px 0 0 rgba(0, 255, 255, 0.6),
    250px 45px 0 0 rgba(255, 0, 255, 0.6), 300px 20px 0 0 rgba(255, 255, 0, 0.6),
    350px 35px 0 0 rgba(0, 255, 255, 0.6), 400px 50px 0 0 rgba(255, 0, 255, 0.6),
    450px 25px 0 0 rgba(255, 255, 0, 0.6), 500px 40px 0 0 rgba(0, 255, 255, 0.6),
    550px 15px 0 0 rgba(255, 0, 255, 0.6), 600px 30px 0 0 rgba(255, 255, 0, 0.6),
    25px 80px 0 0 rgba(0, 255, 255, 0.6), 75px 95px 0 0 rgba(255, 0, 255, 0.6),
    125px 70px 0 0 rgba(255, 255, 0, 0.6), 175px 85px 0 0 rgba(0, 255, 255, 0.6),
    225px 100px 0 0 rgba(255, 0, 255, 0.6),
    275px 75px 0 0 rgba(255, 255, 0, 0.6), 325px 90px 0 0 rgba(0, 255, 255, 0.6),
    375px 105px 0 0 rgba(255, 0, 255, 0.6),
    425px 80px 0 0 rgba(255, 255, 0, 0.6), 475px 95px 0 0 rgba(0, 255, 255, 0.6),
    525px 110px 0 0 rgba(255, 0, 255, 0.6),
    575px 85px 0 0 rgba(255, 255, 0, 0.6);
  animation: twinkle 3s ease-in-out infinite alternate;
  pointer-events: none;
  z-index: -1;
}

@keyframes twinkle {
  0% {
    opacity: 0.2;
    transform: scale(0.8);
  }
  100% {
    opacity: 0.7;
    transform: scale(1.2);
  }
}

.loader-single-line {
  display: flex;
  flex-direction: row;
  gap: clamp(2px, 0.3vw, 5px);
  align-items: center;
  justify-content: center;
  padding: clamp(8px, 1.5vw, 15px);
  border: max(2px, 0.3vw) solid rgba(0, 255, 255, 0.7);
  background: rgba(17, 17, 17, 0.9);
  backdrop-filter: blur(5px);
  box-shadow: 0 0 max(8px, 1.5vw) rgba(0, 255, 255, 0.5),
    inset 0 0 max(15px, 2.5vw) rgba(0, 255, 255, 0.08);
  border-radius: max(5px, 1vw);
  max-width: 98vw;
  overflow-x: auto;
  overflow-y: visible;
  transition: all 1s ease-in-out;
}

/* Completion glow effect for the outer box */
.tetris-container.complete .loader-single-line {
  border-color: #cc6699;
  box-shadow: 0 0 max(20px, 3vw) #cc6699,
    0 0 max(40px, 6vw) rgba(204, 102, 153, 0.4),
    0 0 max(60px, 9vw) rgba(204, 102, 153, 0.2),
    inset 0 0 max(25px, 4vw) rgba(204, 102, 153, 0.15);
  animation: completion-pulse 2s ease-in-out infinite alternate;

  /* Add transition delay for the pink color */
  transition: all 1.5s ease-in-out 1s; /* 1s delay before pink color starts */
}

@keyframes completion-pulse {
  0% {
    box-shadow: 0 0 max(20px, 3vw) #cc6699,
      0 0 max(40px, 6vw) rgba(204, 102, 153, 0.4),
      0 0 max(60px, 9vw) rgba(204, 102, 153, 0.2),
      inset 0 0 max(25px, 4vw) rgba(204, 102, 153, 0.15);
  }
  100% {
    box-shadow: 0 0 max(30px, 4.5vw) #cc6699,
      0 0 max(60px, 9vw) rgba(204, 102, 153, 0.6),
      0 0 max(90px, 13.5vw) rgba(204, 102, 153, 0.3),
      inset 0 0 max(35px, 5.5vw) rgba(204, 102, 153, 0.2);
  }
}

.char-grid {
  display: grid;
  grid-template-columns: repeat(5, clamp(3px, 0.6vw, 8px));
  grid-template-rows: repeat(5, clamp(3px, 0.6vw, 8px));
  gap: clamp(0.5px, 0.1vw, 1px);
  flex-shrink: 0;
}

.tetris-block-pixel {
  width: clamp(3px, 0.6vw, 8px);
  height: clamp(3px, 0.6vw, 8px);
  background-color: transparent;
  border-radius: clamp(0.5px, 0.1vw, 1px);
  /* Start from way above the screen like the T-piece */
  transform: translateY(calc(-200px - 10vw));
  opacity: 1;
  /* Use the same animation timing as the T-piece */
  animation: fall-block-unit 1.5s ease-in-out forwards;
  border: 1px dashed rgba(85, 85, 85, 0.3);
  /* Add the same glow effect as the T-piece */
  filter: drop-shadow(0 0 max(3px, 0.6vw) transparent);
}

/* Single cyan color for all characters */
.char-grid .tetris-block-pixel.filled {
  background: linear-gradient(135deg, #00ffff 0%, #00cccc 50%, #00ffff 100%);
  border: 1px solid #00cccc;
  filter: drop-shadow(0 0 max(4px, 0.8vw) rgba(0, 255, 255, 0.6));
}

/* Keep spaces transparent */
.char-grid:nth-child(5) .tetris-block-pixel.filled,
.char-grid:nth-child(9) .tetris-block-pixel.filled,
.char-grid:nth-child(14) .tetris-block-pixel.filled {
  background: transparent;
  border: none;
  filter: none;
}

/* Same animation as the T-piece falling */
@keyframes fall-block-unit {
  0% {
    transform: translateY(calc(-200px - 10vw));
    opacity: 1;
  }
  100% {
    transform: translateY(0);
    opacity: 1;
  }
}

/* Mobile optimizations */
@media (max-width: 768px) {
  .tetris-container {
    --block-size: min(6vw, 25px);
    --gap-size: max(1px, 0.3vw);
    --board-padding: max(8px, 1.5vw);
    padding: 5px;
  }

  .loader-single-line {
    gap: clamp(1px, 0.2vw, 3px);
    padding: clamp(5px, 1vw, 10px);
    max-width: 99vw;
  }

  .char-grid {
    grid-template-columns: repeat(5, clamp(2.5px, 0.5vw, 6px));
    grid-template-rows: repeat(5, clamp(2.5px, 0.5vw, 6px));
    gap: clamp(0.3px, 0.08vw, 0.8px);
  }

  .tetris-block-pixel {
    width: clamp(2.5px, 0.5vw, 6px);
    height: clamp(2.5px, 0.5vw, 6px);
    animation: fall-block-unit 1.2s ease-in-out forwards;
  }
}

@media (max-width: 480px) {
  .tetris-container {
    --block-size: min(7vw, 22px);
    --gap-size: max(1px, 0.4vw);
    --board-padding: max(10px, 2vw);
    padding: 3px;
  }

  .loader-single-line {
    gap: clamp(0.8px, 0.15vw, 2px);
    padding: clamp(3px, 0.8vw, 8px);
    max-width: 99.5vw;
  }

  .char-grid {
    grid-template-columns: repeat(5, clamp(2px, 0.4vw, 5px));
    grid-template-rows: repeat(5, clamp(2px, 0.4vw, 5px));
    gap: clamp(0.2px, 0.06vw, 0.6px);
  }

  .tetris-block-pixel {
    width: clamp(2px, 0.4vw, 5px);
    height: clamp(2px, 0.4vw, 5px);
    animation: fall-block-unit 1s ease-in-out forwards;
  }
}

/* Large screen optimizations */
@media (min-width: 1200px) {
  .tetris-container {
    --block-size: min(3vw, 35px);
    --gap-size: max(2px, 0.15vw);
    --board-padding: max(12px, 0.8vw);
    padding: 15px;
  }

  .loader-single-line {
    gap: clamp(4px, 0.5vw, 8px);
    padding: clamp(12px, 2vw, 20px);
    max-width: 96vw;
  }

  .char-grid {
    grid-template-columns: repeat(5, clamp(5px, 0.8vw, 12px));
    grid-template-rows: repeat(5, clamp(5px, 0.8vw, 12px));
    gap: clamp(0.8px, 0.12vw, 1.5px);
  }

  .tetris-block-pixel {
    width: clamp(5px, 0.8vw, 12px);
    height: clamp(5px, 0.8vw, 12px);
  }
}

/* Ultra-wide screen optimizations */
@media (min-width: 1600px) {
  .loader-single-line {
    gap: clamp(6px, 0.6vw, 10px);
    padding: clamp(15px, 2.5vw, 25px);
    max-width: 94vw;
  }

  .char-grid {
    grid-template-columns: repeat(5, clamp(6px, 1vw, 15px));
    grid-template-rows: repeat(5, clamp(6px, 1vw, 15px));
    gap: clamp(1px, 0.15vw, 2px);
  }

  .tetris-block-pixel {
    width: clamp(6px, 1vw, 15px);
    height: clamp(6px, 1vw, 15px);
  }
}

/* Reduce motion for accessibility */
@media (prefers-reduced-motion: reduce) {
  body::before,
  body::after,
  .tetris-container::before,
  .tetris-container::after {
    animation: none;
  }

  .tetris-block-pixel {
    animation: fall-block-unit-simple 1s ease-out forwards;
  }

  @keyframes fall-block-unit-simple {
    0% {
      transform: translateY(-50px);
      opacity: 0;
    }
    100% {
      transform: translateY(0);
      opacity: 1;
    }
  }
}
